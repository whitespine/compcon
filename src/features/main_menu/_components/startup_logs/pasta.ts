import { encryption } from '@/io/Generators'

const plog = typer => {
  typer
    .type(`What the fuck did you just fucking say about me, you little bitch? I'll have you know I graduated top of my class in the Navy Seals, and I've been involved in numerous secret raids on Al-Quaeda, and I have over 300 confirmed kills. I am trained in gorilla warfare and I'm the top sniper in the entire US armed forces. You are nothing to me but just another target. I will wipe you the fuck out with precision the likes of which has never been seen before on this Earth, mark my fucking words. You think you can get away with saying that shit to me over the Internet? Think again, fucker. As we speak I am contacting my secret network of spies across the USA and your IP is being traced right now so you better prepare for the storm, maggot. The storm that wipes out the pathetic little thing you call your life. You're fucking dead, kid. I can be anywhere, anytime, and I can kill you in over seven hundred ways, and that's just with my bare hands. Not only am I extensively trained in unarmed combat, but I have access to the entire arsenal of the United States Marine Corps and I will use it to its full extent to wipe your miserable ass off the face of the continent, you little shit. If only you could have known what unholy retribution your little "clever" comment was about to bring down upon you, maybe you would have held your fucking tongue. But you couldn't, you didn't, and now you're paying the price, you goddamn idiot. I will shit fury all over you and you will drown in it. You're fucking dead, kiddo.`)
    .type('<br>')
    .type('COMPANION/CONCIERGE UNIT INITIALIZING')
    .break()
    .type('GMS COMP/CON Unit Mk XI Rev 11.4.1c')
    .break()
    .type('5016.8.22 General Massive Systems // Please Operate Responsibly')
    .break()
    .type('Initializing semantic manifold ')
    .pause(150)
    .type('. ')
    .pause(150)
    .type('. ')
    .pause(150)
    .type('. ')
    .pause(150)
    .type('done')
    .break()
    .type('Initializing logic gradients ')
    .pause(150)
    .type('. ')
    .pause(150)
    .type('. ')
    .pause(150)
    .type('. ')
    .pause(150)
    .type('done')
    .break()
    .type('&emsp;&emsp;1.0255EB FREE (3.6EB TOTAL)')
    .break()
    .type('KERNEL supported CPUs:')
    .break()
    .type('&emsp;&emsp;GMS MISSISSIPPI Series (MkII+)')
    .break()
    .type('&emsp;&emsp;IPS-N Carronade v9.1+')
    .break()
    .type('&emsp;&emsp;SSC Premier IV-XIV')
    .break()
    .type('&emsp;&emsp;HA DOMINANCE line/all')
    .break()
    .type(
      '&emsp;&emsp;[WN UNKNOWN UNKNOWN UNKNOWN <span class="horus--subtle">UN</span>KNOWN UNKNOWN UNKN]'
    )
    .break()
    .type(`Policy Zone: ${encryption()}`)
    .break()
    .type('Demand map ICRS at 3c0001000-23c0001000.')
    .break()
    .type('Heap//PSIM at 23c0002000-43c0002000.')
    .break()
    .type('Thread "Idle": pointer: 0x23c0002010, stack: 0x6440000')
    .break()
    .type('Thread "Main": pointer: 0x23c0002f70, stack: 0x6460000')
    .break()
    .type(`****** VDOMAIN for frame//integrator ******`)
    .break()
    .type('backend at /local/domain/0/backend/gms/')
    .break()
    .type('Failed to read /local/domain/0/ssc/fs_sync.')
    .break()
    .type('Failed to read /local/domain/0/gms/dummy_plug.')
    .break()
    .type('Failed to read /local/domain/0/gms/manual_controls.')
    .break()
    .type('WARNING: FRAME NOT PRESENT OR INVALID')
    .break()
    .type('******************************************')
    .break()
    .type('Initializing gms-cc-subsys v_int')
    .break()
    .type('Initializing gms-cc-subsys tests')
    .break()
    .type('Initializing gms-cc-subsys omninet_cls')
    .break()
    .type('Initializing gms-cc-subsys events')
    .break()
    .type('Hierarchical RCU implementation.')
    .break()
    .type('RCU subjective-clock acceleration is DISABLED.')
    .break()
    .type(`Establishing encrypted link (${encryption()}) `)
    .pause(200)
    .type('. ')
    .pause(200)
    .type('. ')
    .pause(200)
    .type('. ')
    .pause(300)
    .type('done')
    .break()
    .type('AM-LI in unprivileged domain disabled')
    .break()
    .type('No sensory bridge found // manual input mode enabled')
    .break()
    .type(
      '>//[<span class="accent--text">COMP/CON</span>: <span class="stark-text--text">Welcome, Lancer. Input Command.</span>]'
    )
    .go()
}

export default plog
